<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yol</title>
  
  <subtitle>睡到自然醒，悠然见南山~</subtitle>
  <link href="https://xu-zi-kang.github.io/atom.xml" rel="self"/>
  
  <link href="https://xu-zi-kang.github.io/"/>
  <updated>2024-01-23T08:41:43.480Z</updated>
  <id>https://xu-zi-kang.github.io/</id>
  
  <author>
    <name>yol</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【小雅】自动清理阿里云盘缓存</title>
    <link href="https://xu-zi-kang.github.io/2024/01/23/%E3%80%90%E5%B0%8F%E9%9B%85%E3%80%91%E8%87%AA%E5%8A%A8%E6%B8%85%E7%90%86%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E7%BC%93%E5%AD%98/"/>
    <id>https://xu-zi-kang.github.io/2024/01/23/%E3%80%90%E5%B0%8F%E9%9B%85%E3%80%91%E8%87%AA%E5%8A%A8%E6%B8%85%E7%90%86%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E7%BC%93%E5%AD%98/</id>
    <published>2024-01-23T08:40:49.000Z</published>
    <updated>2024-01-23T08:41:43.480Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">模式0：每天自动清理一次。如果系统重启需要手动重新运行或把命令加入系统启动。</span><br><span class="line">bash -c <span class="string">&quot;<span class="subst">$(curl -s https://xiaoyahelper.zngle.cf/aliyun_clear.sh | tail -n +2)</span>&quot;</span> -s 0 -tg</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">模式1：一次性清理，一般用于测试效果。</span><br><span class="line">bash -c <span class="string">&quot;<span class="subst">$(curl -s https://xiaoyahelper.zngle.cf/aliyun_clear.sh | tail -n +2)</span>&quot;</span> -s 1 -tg</span><br></pre></td></tr></table></figure><h4 id="模式2：已废弃，不再支持"><a href="#模式2：已废弃，不再支持" class="headerlink" title="模式2：已废弃，不再支持"></a><del>模式2：已废弃，不再支持</del></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">模式3：创建一个名为 xiaoyakeeper 的docker定时运行小雅转存清理并升级小雅镜像</span><br><span class="line">bash -c <span class="string">&quot;<span class="subst">$(curl -s https://xiaoyahelper.zngle.cf/aliyun_clear.sh | tail -n +2)</span>&quot;</span> -s 3 -tg</span><br></pre></td></tr></table></figure><p><del>模式4：同模式3</del></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">模式5：与模式3的区别是实时清理，只要产生了播放缓存一分钟内立即清理。签到和定时升级同模式3</span><br><span class="line">bash -c <span class="string">&quot;<span class="subst">$(curl -s https://xiaoyahelper.zngle.cf/aliyun_clear.sh | tail -n +2)</span>&quot;</span> -s 5 -tg</span><br></pre></td></tr></table></figure><h3 id="推荐模式3和模式5"><a href="#推荐模式3和模式5" class="headerlink" title="推荐模式3和模式5"></a>推荐模式3和模式5</h3><p> <em><strong>*发送验证码说明：*</strong></em></p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">可以等待20秒，即自动跳过此部分，不影响正常使用。</span><br><span class="line">需要发送验证码的可以TG自行查找：xiaoyahelper_bot</span><br></pre></td></tr></table></figure></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>【git】完美解决git报错</title>
    <link href="https://xu-zi-kang.github.io/2024/01/23/%E3%80%90git%E3%80%91%E5%AE%8C%E7%BE%8E%E8%A7%A3%E5%86%B3git%E6%8A%A5%E9%94%99/"/>
    <id>https://xu-zi-kang.github.io/2024/01/23/%E3%80%90git%E3%80%91%E5%AE%8C%E7%BE%8E%E8%A7%A3%E5%86%B3git%E6%8A%A5%E9%94%99/</id>
    <published>2024-01-23T08:37:50.000Z</published>
    <updated>2024-01-23T08:39:51.652Z</updated>
    
    <content type="html"><![CDATA[<h1 id="完美解决-git报错fatal-unable-to-access-‘https-github-com-git‘-Recv-failure-Connection-was-reset"><a href="#完美解决-git报错fatal-unable-to-access-‘https-github-com-git‘-Recv-failure-Connection-was-reset" class="headerlink" title="完美解决 git报错fatal: unable to access ‘https://github.com/.../.git‘:Recv failure Connection was reset"></a>完美解决 git报错fatal: unable to access ‘<a href="https://github.com/.../.git%E2%80%98:Recv">https://github.com/.../.git‘:Recv</a> failure Connection was reset</h1><p>在使用git时，经常会碰到这个错误：fatal: unable to access ‘<a href="https://github.com/.../.git':Recv">https://github.com/.../.git&#39;:Recv</a> failure Connection was reset。</p><p>结合我个人最近的使用经验，提供两个方法，亲测有效。</p><p>方法一<br>该方法也是最常见的方法，那就是在终端执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --unset http.proxy </span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>本人之前在使用git时，有些时候使用方法一就能解决问题，有些时候还是会报错，下面这个方法，能够完美地解决报错。</p><p><a href="https://so.csdn.net/so/search?q=%E7%B3%BB%E7%BB%9F%E8%AE%BE%E7%BD%AE&spm=1001.2101.3001.7020">系统设置</a>搜索代理，然后点击编辑按钮：<br><img src="https://img-blog.csdnimg.cn/a2cad54ac3ea4705a01709eca9930978.png" alt="在这里插入图片描述"></p><p>打开<a href="https://so.csdn.net/so/search?q=%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8&spm=1001.2101.3001.7020">代理服务器</a>，端口设置为<code>7890</code>，这个对你正常上网没有影响，可以放心设置。然后点击保存。</p><p><img src="https://img-blog.csdnimg.cn/0f403beb730149d680f1f4d4ab0b2472.png" alt="在这里插入图片描述"></p><p>然后在终端输入命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>这样就大功告成了。可以在终端输入<code>git config --global -l</code>加以检验是否设置成功：</p><p><img src="https://img-blog.csdnimg.cn/8fd73100caf64012a736f16b25a9aed9.png" alt="在这里插入图片描述"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;完美解决-git报错fatal-unable-to-access-‘https-github-com-git‘-Recv-failure-Connection-was-reset&quot;&gt;&lt;a href=&quot;#完美解决-git报错fatal-unable-to-acces</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>【git】生成sshKey密匙</title>
    <link href="https://xu-zi-kang.github.io/2024/01/23/%E3%80%90git%E3%80%91%E7%94%9F%E6%88%90sshKey%E5%AF%86%E5%8C%99/"/>
    <id>https://xu-zi-kang.github.io/2024/01/23/%E3%80%90git%E3%80%91%E7%94%9F%E6%88%90sshKey%E5%AF%86%E5%8C%99/</id>
    <published>2024-01-23T07:24:08.000Z</published>
    <updated>2024-01-23T07:24:53.080Z</updated>
    
    <content type="html"><![CDATA[<h2 id="3-1-生成ssh-key"><a href="#3-1-生成ssh-key" class="headerlink" title="3-1 生成ssh key"></a>3-1 生成ssh key</h2><p>首先检查是否已生成密钥 <code>cd ~/.ssh</code>，ls如果有2个文件，则密钥已经生成，id_rsa.pub就是公钥</p><p><img src="https://pic4.zhimg.com/80/v2-25d08d16d7ac6837d36f7b4dc2fb8d77_720w.webp" alt="img"></p><p>也可以打开我的电脑C:\Users\Y\ .ssh 里面找到</p><p><img src="https://pic4.zhimg.com/80/v2-f6d1ed1cc81d87091a8377551a1f499f_720w.webp" alt="img"></p><p>如果没有生成，那么通过$ ssh-keygen -t rsa -C “<a href="mailto:&#x78;&#x78;&#x78;&#x78;&#x78;&#x78;&#x40;&#x31;&#54;&#51;&#x2e;&#x63;&#111;&#109;">&#x78;&#x78;&#x78;&#x78;&#x78;&#x78;&#x40;&#x31;&#54;&#51;&#x2e;&#x63;&#111;&#109;</a>”来生成。</p><p>1）是路径确认，直接按回车存默认路径即可</p><p>2）直接回车键，这里我们不使用密码进行登录, 用密码太麻烦;</p><p>3）直接回车键</p><p><img src="https://pic2.zhimg.com/80/v2-d39142ec5219c9b6b4cd86f422df36cd_720w.webp" alt="img"></p><p>生成成功后，去对应目录C:\Users\Y\ .ssh里（Y为电脑用户名，每个人不同）用记事本打开id_rsa.pub，得到ssh key公钥</p><p><img src="https://pic4.zhimg.com/80/v2-bae8ba2dad5a59ba34aa9a76c3ed8b53_720w.webp" alt="img"></p><h2 id="3-2-为github账号配置ssh-key"><a href="#3-2-为github账号配置ssh-key" class="headerlink" title="3-2 为github账号配置ssh key"></a>3-2 为github账号配置ssh key</h2><p>切换到github，展开个人头像的小三角，点击settings</p><p><img src="https://pic4.zhimg.com/80/v2-2891d0ae8b1b3657b64435504b42f433_720w.webp" alt="img"></p><p>然后打开SSH keys菜单， 点击Add SSH key新增密钥，填上标题，跟仓库保持一致吧，好区分。</p><p>接着将id_rsa.pub文件中key粘贴到此，最后Add key生成密钥吧。</p><p><img src="https://pic3.zhimg.com/80/v2-3e5691de58e3f59442e3d2b7a0f2298e_720w.webp" alt="img"></p><p>如此，github账号的SSH keys配置完成。</p><p><img src="https://pic4.zhimg.com/80/v2-656246b7f8e281a0baa8ba50f9de874f_720w.webp" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;3-1-生成ssh-key&quot;&gt;&lt;a href=&quot;#3-1-生成ssh-key&quot; class=&quot;headerlink&quot; title=&quot;3-1 生成ssh key&quot;&gt;&lt;/a&gt;3-1 生成ssh key&lt;/h2&gt;&lt;p&gt;首先检查是否已生成密钥 &lt;code&gt;cd ~/.ss</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>黃明志Ft.蒼井空【別人的老婆】</title>
    <link href="https://xu-zi-kang.github.io/2024/01/23/%E9%BB%83%E6%98%8E%E5%BF%97Ft-%E8%92%BC%E4%BA%95%E7%A9%BA%E3%80%90%E5%88%A5%E4%BA%BA%E7%9A%84%E8%80%81%E5%A9%86%E3%80%91/"/>
    <id>https://xu-zi-kang.github.io/2024/01/23/%E9%BB%83%E6%98%8E%E5%BF%97Ft-%E8%92%BC%E4%BA%95%E7%A9%BA%E3%80%90%E5%88%A5%E4%BA%BA%E7%9A%84%E8%80%81%E5%A9%86%E3%80%91/</id>
    <published>2024-01-23T06:39:59.000Z</published>
    <updated>2024-01-23T06:40:49.700Z</updated>
    
    <content type="html"><![CDATA[<iframe width="560" height="315" src="https://www.youtube.com/embed/a1T2FVLP29M?si=2OfjjcLBpZqtYIUj" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h1 id="黃明志-三上悠亞【不小心-I-Shot-You】-亞洲通才-2020-Asian-Polymath"><a href="#黃明志-三上悠亞【不小心-I-Shot-You】-亞洲通才-2020-Asian-Polymath" class="headerlink" title="黃明志 &amp; 三上悠亞【不小心 I Shot You】@亞洲通才 2020 Asian Polymath"></a>黃明志 &amp; 三上悠亞【不小心 I Shot You】@亞洲通才 2020 Asian Polymath</h1><iframe width="560" height="315" src="https://www.youtube.com/embed/wl1JHpRox_8?si=xWVcb-gJB-5YxPjr" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>]]></content>
    
    
      
      
    <summary type="html">&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/a1T2FVLP29M?si=2OfjjcLBpZqtYIUj&quot; title=&quot;YouTube video player&quot; frameborde</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Portainer-docker图形化工具</title>
    <link href="https://xu-zi-kang.github.io/2024/01/21/Portainer-docker%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B7%A5%E5%85%B7/"/>
    <id>https://xu-zi-kang.github.io/2024/01/21/Portainer-docker%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B7%A5%E5%85%B7/</id>
    <published>2024-01-21T12:07:14.000Z</published>
    <updated>2024-01-21T12:09:28.512Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-图形化工具-Portaine"><a href="#Docker-图形化工具-Portaine" class="headerlink" title="Docker 图形化工具 Portaine"></a>Docker 图形化工具 Portaine</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">之前操作Docker的时候，一直使用的是命令行的形式。命令行虽说看起来挺炫酷，但有时候还是挺麻烦的。今天给大家推荐一个Docker图形化工具[Portainer]，轻量级又好用，希望对大家有所帮助！</span><br></pre></td></tr></table></figure><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Portainer 是一款轻量级的应用，它提供了图形化界面，用于方便地管理Docker环境，包括单机环境和集群环境。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><p>直接使用Docker来安装Portainer是非常方便的，仅需要两步即可完成。</p></blockquote><ul><li>首先下载Portainer的Docker镜像；</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull portainer/portainer</span><br></pre></td></tr></table></figure><ul><li>然后再使用如下命令运行Portainer容器；</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 9000:9000 -p 8000:8000 --name portainer \</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--restart=always \</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-v /mydata/portainer/data:/data \</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-d portainer/portainer</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><ul><li><p>第一次登录的时候需要创建管理员账号，访问地址：<a href="http://ip:9000/">http://ip:9000/</a></p><p><img src="https://img-blog.csdnimg.cn/img_convert/2a1ab8ecdb0946511128475d0357706d.png" alt="img"></p></li></ul><p>吊炸天的 Docker 图形化工具 Portainer，必须推荐给你</p><ul><li>之后我们选择连接到本地的Docker环境，连接完成后我们就可以愉快地使用Portainer进行可视化管理了！</li><li><img src="https://img-blog.csdnimg.cn/img_convert/5d3a48e492e2d5f24339da0f90679e54.png" alt="img"></li></ul><p>吊炸天的 Docker 图形化工具 Portainer，必须推荐给你</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul><li>登录成功后，可以发现有一个本地的Docker环境；</li><li><img src="https://img-blog.csdnimg.cn/img_convert/243ed5bc24a0956ff8f2bfbef9bf5707.png" alt="img"></li></ul><p>吊炸天的 Docker 图形化工具 Portainer，必须推荐给你</p><ul><li>打开Dashboard菜单可以看到Docker环境的概览信息，比如运行了几个容器，有多少个镜像等；</li><li><img src="https://img-blog.csdnimg.cn/img_convert/ab44938632c0a318d4e60afe5b4d3378.png" alt="img"></li></ul><p>吊炸天的 Docker 图形化工具 Portainer，必须推荐给你</p><ul><li>打开App Templates菜单可以看到很多创建容器的模板，通过模板设置下即可轻松创建容器，支持的应用还是挺多的；</li><li><img src="https://img-blog.csdnimg.cn/img_convert/50a04e25e8ca4ef3c6559cb88dbfb71a.png" alt="img"></li></ul><p>吊炸天的 Docker 图形化工具 Portainer，必须推荐给你</p><ul><li>打开Containers菜单，可以看到当前创建的容器，我们可以对容器进行运行、暂停、删除等操作；</li><li><img src="https://img-blog.csdnimg.cn/img_convert/c6a998d47f6f09f21345682a66182740.png" alt="img"></li></ul><p>吊炸天的 Docker 图形化工具 Portainer，必须推荐给你</p><ul><li>选择一个容器，点击Logs按钮，可以直接查看容器运行日志，可以和docker logs命令说再见了；</li></ul><p><img src="https://img-blog.csdnimg.cn/img_convert/4f4e5e0cd02c1945b28180a4b3068af2.png" alt="img"></p><ul><li>点击Inspect按钮，可以查看容器信息，比如看看容器运行的IP地址；</li><li><img src="https://img-blog.csdnimg.cn/img_convert/495bea66815e08fecc955f8c539fb9ce.png" alt="img"></li></ul><p>吊炸天的 Docker 图形化工具 Portainer，必须推荐给你</p><ul><li>点击Stats按钮，可以查看容器的内存、CPU及网络的使用情况，性能分析不愁了；</li><li><img src="https://img-blog.csdnimg.cn/img_convert/0c629959481a139e5db8967d60b6e8cc.png" alt="img"></li></ul><p>吊炸天的 Docker 图形化工具 Portainer，必须推荐给你</p><ul><li>点击Console按钮，可以进入到容器中去执行命令，比如我们可以进入到MySQL容器中去执行登录命令；</li></ul><p><img src="https://img-blog.csdnimg.cn/img_convert/b60577e47a4d45aa039a3391b4bc9626.png" alt="img"></p><ul><li>打开Images菜单，我们可以查看所有的本地镜像，对镜像进行管理；</li><li><img src="https://img-blog.csdnimg.cn/img_convert/badf3e490201d5899ec8a4d02e342b48.png" alt="img"></li></ul><p>吊炸天的 Docker 图形化工具 Portainer，必须推荐给你</p><ul><li>打开Networks菜单，可以查看Docker环境中的网络情况；</li><li><img src="https://img-blog.csdnimg.cn/img_convert/6cfc4dcad970b6fbf1dcb91683379a72.png" alt="img"></li></ul><p>吊炸天的 Docker 图形化工具 Portainer，必须推荐给你</p><ul><li>打开Users菜单，我们可以创建Portainer的用户，并给他们赋予相应的角色；</li></ul><p><img src="https://img-blog.csdnimg.cn/img_convert/f0ca705213f3791afe0db04192955b4f.png" alt="img"></p><ul><li>打开Registries菜单，我们可以配置自己的镜像仓库，这样在拉取镜像的时候，就可以选择从自己的镜像仓库拉取了。</li><li><img src="https://img-blog.csdnimg.cn/img_convert/3dd9864eb320d2db624192138f797855.png" alt="img"></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Portainer作为一款轻量级Docker图形化管理工具，功能强大且实用，要是有个私有镜像仓库管理功能就更好了，这样我们就不用安装重量级的镜像仓库<a href="https://so.csdn.net/so/search?q=Harbor&spm=1001.2101.3001.7020">Harbor</a>了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Docker-图形化工具-Portaine&quot;&gt;&lt;a href=&quot;#Docker-图形化工具-Portaine&quot; class=&quot;headerlink&quot; title=&quot;Docker 图形化工具 Portaine&quot;&gt;&lt;/a&gt;Docker 图形化工具 Portaine&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>hexo报错解决办法</title>
    <link href="https://xu-zi-kang.github.io/2024/01/12/hexo%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://xu-zi-kang.github.io/2024/01/12/hexo%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</id>
    <published>2024-01-12T10:30:40.000Z</published>
    <updated>2024-01-12T10:33:50.733Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo发生error：spawn-failed错误的解决方法"><a href="#hexo发生error：spawn-failed错误的解决方法" class="headerlink" title="hexo发生error：spawn failed错误的解决方法"></a>hexo发生error：spawn failed错误的解决方法</h1><h2 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h2><ul><li>先是出现错误：<br><code>error：spawn failed...</code></li><li>然后经过一些博客的操作会出现以下问题：<br><code>fatal: cannot lock ref &#39;HEAD&#39;: unable to resolve reference HEAD: Invalid argument error: src refspec</code></li><li>或者：<br><code>error: src refspec HEAD does not match any.</code>等等</li><li>总结一下：<br>问题大多是因为git 进行push或者hexo d的时候改变了一些.deploy_git文件下的内容。</li></ul><h3 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h3><p>1.删除<code>.deploy_git</code>文件夹;<br>2.输入<code>git config --global core.autocrlf false</code><br>3，然后，依次执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>问题解决。暴力直接，有效。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;hexo发生error：spawn-failed错误的解决方法&quot;&gt;&lt;a href=&quot;#hexo发生error：spawn-failed错误的解决方法&quot; class=&quot;headerlink&quot; title=&quot;hexo发生error：spawn failed错误的解决方</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux相关操作</title>
    <link href="https://xu-zi-kang.github.io/2024/01/12/Linux%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/"/>
    <id>https://xu-zi-kang.github.io/2024/01/12/Linux%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/</id>
    <published>2024-01-12T08:09:34.000Z</published>
    <updated>2024-01-12T08:09:58.302Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://ip:8888/baota">https://ip:8888/baota</a></p><p>1.查看面板入口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/bt default</span><br></pre></td></tr></table></figure><p>请输入新的面板密码：Xuzikang0917<br>|-用户名: ae9zbxss<br>|-新密码: Xuzikang0917</p><p>tar指令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">tar -cvf [打的包的名称].tar [目录名称]  --打包</span><br><span class="line"></span><br><span class="line">tar -zcvf [想压缩的包的名称].tar.gz [压缩的目录]  --打包并压缩</span><br><span class="line"></span><br><span class="line">tar -xvf [需要解的包名].tar  --解包</span><br><span class="line"></span><br><span class="line">tar -zxvf [需要解压缩的压缩文件名].tar.gz  --解压缩包</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span>指令:</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> [想移动的文件名] [移动到哪个目录]/  --移动文件</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span>指令:</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> [想转到的目录名]/ --转目录层</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> .. --回到上一层目录</span><br><span class="line"></span><br><span class="line"><span class="built_in">touch</span>指令:</span><br><span class="line"></span><br><span class="line"><span class="built_in">touch</span> [想创建的文件]  --创建文件</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span>指令:</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> [想创建的目录名称]  --创建目录</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf 文件夹名 --暴力删除</span><br><span class="line"></span><br><span class="line">vim指令:</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> nu  --给文件加行号</span><br><span class="line"></span><br><span class="line">防火墙:</span><br><span class="line">关 firewall-cmd --zone=public --add-port=6379/tcp --permanent  </span><br><span class="line">立即生效  firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>Windows：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano | findstr 8082</span><br><span class="line"></span><br><span class="line">终端中输入taskkill /f /pid 13792，按下回车，即可杀死进程，释放端口。</span><br></pre></td></tr></table></figure><p>Linux：</p><pre><code>netstat -tln | grep 8083netstat  -anp  | grep  8083  # 显示正在使用Socket的程序识别码和程序名称kill -9 29686</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://ip:8888/baota&quot;&gt;https://ip:8888/baota&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1.查看面板入口：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>hexo指令</title>
    <link href="https://xu-zi-kang.github.io/2024/01/12/hexo%E6%8C%87%E4%BB%A4/"/>
    <id>https://xu-zi-kang.github.io/2024/01/12/hexo%E6%8C%87%E4%BB%A4/</id>
    <published>2024-01-12T08:09:17.000Z</published>
    <updated>2024-01-23T08:42:11.772Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-hexo文章的提交"><a href="#一-hexo文章的提交" class="headerlink" title="一.hexo文章的提交"></a>一.hexo文章的提交</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p><strong>1.清理网页缓存数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><p><strong>2.</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><p><strong>3.部署到github</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>4.新建一篇文章</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo n 文章名</span><br></pre></td></tr></table></figure><blockquote><p>这是一段引用</p></blockquote><p><em>斜体</em></p><p><img src="http://8.130.18.80:8003/i/ebf77d2f-269a-437c-9a8c-86f281b8572e.jpg" alt="image"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello world 代码块</span><br></pre></td></tr></table></figure><p>这是一串代码<code>hello world</code>,你好</p><p>Yol的博客：<a href="https://xu-zi-kang.github.io/">点击进入</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一-hexo文章的提交&quot;&gt;&lt;a href=&quot;#一-hexo文章的提交&quot; class=&quot;headerlink&quot; title=&quot;一.hexo文章的提交&quot;&gt;&lt;/a&gt;一.hexo文章的提交&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://xu-zi-kang.github.io/2024/01/11/hello-world/"/>
    <id>https://xu-zi-kang.github.io/2024/01/11/hello-world/</id>
    <published>2024-01-11T03:46:49.019Z</published>
    <updated>2024-01-11T03:46:49.019Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
